olsreg <- lm(data[[i]] ~ data$x)
print(summary(olsreg))
}
linearHypothesis(olsreg, "x = 1")
names = list("BOISE", "CITCRP", "CONED", "CONTIL", "DATGEN", "DEC", "GENMIL", "GERBER", "IBM", "MOTOR", "PANAM", "PSNH", "TANDY", "TEXACO", "WEYER")
for(i in names){
data[[paste('y',i ,sep = '_')]] <- data[[i]] - data$RKFREE
}
y_names = list("y_BOISE", "y_CITCRP", "y_CONED", "y_CONTIL", "y_DATGEN", "y_DEC", "y_GENMIL", "y_GERBER", "y_IBM", "y_MOTOR", "y_PANAM", "y_PSNH", "y_TANDY", "y_TEXACO", "y_WEYER")
for(i in y_names){
olsreg <- lm(data[[i]] ~ data$x)
print(summary(olsreg))
}
linearHypothesis(olsreg, "data$x = 1")
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven) #чтение .dta файлов
library(kdensity) #ядерное сглаживание
library(scales) #отображение нескольких графиков на одном.
library(tsoutliers) #тест на нормальность
df <- read_dta(file = "housing.dta")
#attach(data)
summary(df)
lin_m1 <- lm(price ~ lotsize, data = df)
plot(df$lotsize, df$price)
abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
plot(lotsize, price, data = df)
lin_m1 <- lm(price ~ lotsize, data = df)
plot(df$lotsize, df$price)
abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price))
abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price))
#abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price, fill=alloc))
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price, fill=alloc)) + geom_point()
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point()
#abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point()
abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point() + geom_line(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point() + geom_line(formula = lin_m1)
#abline(lin_m1)
lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point() + geom_smooth(method='lm')
#abline(lin_m1)
#lin_m1 <- lm(price ~ lotsize, data = df)
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point() + geom_smooth(method='lm')
ggplot(data=df, aes(x=lotsize, y=price)) + geom_point() + geom_smooth(method='lm')
ggplot(data=df, aes(x=bedrooms, y=price)) + geom_point() + geom_smooth(method='lm')
lin_m3 <- lm(df$price ~ df$bathrms)
plot(df$bathrms, df$price)
abline(lin_m3)
ggplot(data=df, aes(x=bathrms, y=price)) + geom_point() + geom_smooth(method='lm')
omit_4 <- filter(df, df$bathrms != 4)
omit_4
lin_m4 <- lm(omit_4$price ~ omit_4$bathrms)
plot(omit_4$bathrms, omit_4$price)
abline(lin_m4)
omit_4 <- filter(df, df$bathrms != 4)
ggplot(data=omit_4, aes(x=bathrms, y=price)) + geom_point() + geom_smooth(method='lm')
lin_m5 <- lm(df$price ~ df$bedrooms)
plot(df$bedrooms, df$price)
abline(lin_m5)
#ggplot(data=df, aes(x=bedrooms, y=price)) + geom_point() + #geom_smooth(method='lm')
#lin_m5 <- lm(df$price ~ df$bedrooms)
#plot(df$bedrooms, df$price)
#abline(lin_m5)
ggplot(data=df, aes(x=bedrooms, y=price)) + geom_point() + geom_smooth(method='lm')
ggplot(data=df, aes(x=bedrooms, y=price)) + geom_point() + geom_smooth(method='lm')
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(price)) + geom_histogram()
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(price)) + geom_histogram() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y=..density..)) + geom_histogram() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y=..density..)) + geom_histogram() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y=calc(density))) + geom_histogram() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price)) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y = alc(density))) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y = calc(density))) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
library(ggplot2)
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y = calc(density))) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
install.packages("raster")
library(raster)
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price, y = calc(density))) + geom_freqpoly() + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="Price",
#     main='')
#
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
ggplot(data=df, aes(x = price)) + geom_histogram(aes(y=..density..)) + stat_function(fun = dnorm, args = list(mean = m, sd = std))
m<-mean(df$price)
std<-sqrt(var(df$price))
ggplot(data=df, aes(x = price)) + geom_histogram(aes(y=..density..)) + stat_function(fun = dnorm, args = list(mean = m, sd = std))
kde = kdensity(df$price, kernel = "gaussian")
hist(df$price, density=20, breaks=20, prob=TRUE,
xlab="",
main='')
plot(kde)
#kde = kdensity(df$price, kernel = "gaussian")
#hist(df$price, density=20, breaks=20, prob=TRUE,
#     xlab="",
#     main='')
#plot(kde)
ggplot(data=df, aes(x = price)) + geom_histogram(aes(y=..density..)) + geom_density()
lin_m6 <- lm(df$price ~ df$lotsize + df$bedrooms + df$bathrms + df$airco)
resid <- resid(lin_m6)
plot(resid)
#plot(df$price, resid)
lin_m6 <- lm(df$price ~ df$lotsize + df$bedrooms + df$bathrms + df$airco)
resid <- resid(lin_m6)
ggplot(aes(resid))
lin_m6 <- lm(df$price ~ df$lotsize + df$bedrooms + df$bathrms + df$airco)
resid <- resid(lin_m6)
ggplot(resid, aes(resid))
lin_m6 <- lm(df$price ~ df$lotsize + df$bedrooms + df$bathrms + df$airco)
df$resid <- resid(lin_m6)
ggplot(df, aes(x = price, y = resid)) + geom_point()
#plot(df$price, resid)
price_hat <- predict(lin_m6)
plot(df$price, price_hat)
abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, colour = r)
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, colour = red)
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour = red))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour = blue))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour = wt))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(yintercept = wt, colour = wt))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour = blue))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour='A'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour='B'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'red')) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'bl')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue1')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'white')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'brown')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = brown)) + geom_point()  + geom_abline(slope = 1)
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = "brown")) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, fill = "brown")) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'red')) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'blue')) + geom_point()  + geom_abline(slope = 1, aes(colour='blue'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'red')) + geom_point()  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point(aes(colour = 'red'))  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point(aes(colour = 'blue'))  + geom_abline(slope = 1, aes(colour='red'))
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'red')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat, colour = 'red')) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1)
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
df$price_hat <- predict(lin_m6)
ggplot(df, aes(x = price, y = price_hat)) + geom_point()  + geom_abline(slope = 1, color = "red")
#plot(df$price, price_hat)
#abline(0,1, col = 'red')
m<-mean(resid)
std<-sqrt(var(resid))
hist(resid, density=40, breaks=40, prob=TRUE,
xlab="Residuals",
main='')
curve(dnorm(x, mean=m, sd=std),
col="darkblue", lwd=2, add=TRUE, yaxt="n")
m<-mean(resid)
std<-sqrt(var(resid))
#hist(resid, density=40, breaks=40, prob=TRUE,
#     xlab="Residuals",
#     main='')
#curve(dnorm(x, mean=m, sd=std),
#      col="darkblue", lwd=2, add=TRUE, yaxt="n")
#
ggplot(data=df, aes(x = resid)) + geom_histogram(aes(y=..density..)) + stat_function(fun = dnorm, args = list(mean = m, sd = std))
tseries::jarque.bera.test(resid)
shapiro.test(resid)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven) #чтение .dta файлов
library(gap) #Chow test
df <- read_dta(file = "housing.dta")
lin_m1 <- lm(price ~ lotsize + bedrooms + bathrms + airco + driveway + recroom + fullbase + gashw + stories + garagepl + prefarea, data = df
)
summary(lin_m1)
df$lnprice <- log(df$price)
lin_m2 <- lm(lnprice ~ lotsize + bedrooms + bathrms + airco + driveway + recroom + fullbase + gashw + stories + garagepl + prefarea, data =df
)
summary(lin_m2)
df$lnlotsize <- log(df$lotsize)
lin_m3 <- lm(df$lnprice ~ df$lnlotsize + df$bedrooms + df$bathrms + df$airco + df$driveway + df$recroom + df$fullbase + df$gashw + df$stories + df$garagepl + df$prefarea
)
summary(lin_m3)
df$lnprice <- log(df$price)
lin_m2 <- lm(lnprice ~ lotsize + bedrooms + bathrms + airco + driveway + recroom + fullbase + gashw + stories + garagepl + prefarea, data =df
)
summary(lin_m2)
df$lnlotsize <- log(df$lotsize)
lin_m3 <- lm(lnprice ~ lnlotsize + bedrooms + bathrms + airco + driveway + recroom + fullbase + gashw + stories + garagepl + prefarea, data = df
)
summary(lin_m3)
lin_m4 <- lm(price_new ~ lotsize + bedrooms + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea, data = df)
summary(log(df$price))
mean_lnprice <- mean(log(df$price))
df$price_new <- df$price/exp(mean_lnprice)
df$lnprice_new <- log(df$price_new)
lin_m4 <- lm(price_new ~ lotsize + bedrooms + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea, data = df)
summary(lin_m4)
rss1 <- sum(resid(lin_m4)^2)
lin_m5 <- lm(lnprice_new ~ lotsize + bedrooms + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea, data = df)
summary(lin_m5)
rss2 <- sum(resid(lin_m5)^2)
n <- nobs(lin_m5)
chi2 <- n / 2 * abs(log(rss1/rss2))
p_value <- pchisq(chi2, df=1, lower.tail=FALSE)
p_value
lin_m6 <- lm(lnprice ~ lnlotsize + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea + bedrooms2 + bedrooms3 + bedrooms4, data = df)
df$bedrooms2 <- 1L * (df$bedrooms < 3)
df$bedrooms3 <- 1L * (df$bedrooms == 3)
df$bedrooms4 <- 1L * (df$bedrooms == 4)
df$bedrooms5 <- 1L * (df$bedrooms > 4)
lin_m6 <- lm(lnprice ~ lnlotsize + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea + bedrooms2 + bedrooms3 + bedrooms4, data = df)
summary(lin_m6)
lin_m7 <- lm(lnprice ~ lnlotsize + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea + bedrooms2 + bedrooms3 + bedrooms4 + bedrooms5, data = df)
summary(lin_m7)
lin_m8 <- lm(lnprice ~ lnlotsize + bathrms + stories + driveway + recroom + fullbase + gashw + airco + garagepl + prefarea + bedrooms2 + bedrooms3 + bedrooms4 + bedrooms5 - 1, data = df)
summary(lin_m8)
df_1 <- filter(df, df$bedrooms < 3)[, c("lnlotsize", "bedrooms", "bathrms", "stories", "driveway", "recroom", "fullbase", "gashw", "airco", "garagepl", "prefarea")]
y_1 <- filter(df, df$bedrooms < 3)[, c("lnprice")]
df_2 <- filter(df, df$bedrooms > 2)[, c("lnlotsize", "bedrooms", "bathrms", "stories", "driveway", "recroom", "fullbase", "gashw", "airco", "garagepl", "prefarea")]
y_2 <- filter(df, df$bedrooms > 2)[, c("lnprice")]
chow.test(y_1,df_1,y_2,df_2)
knitr::opts_chunk$set(echo = TRUE)
arima_1 <- arima(ts[,"labor"], order = c(1, 0, 1))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven) #чтение .dta файлов
df <- read_dta(file = "crisis.dta")
ts <- ts(df[,c("labor", "oil_b_rub", "rwage", "u")], start = c(1999, 1), end = c(2009, 12), frequency = 12)
lin_m1 <- lm(ts[,"rwage"] ~ ts[,"oil_b_rub"] + ts[,"u"])
summary(lin_m1)
arima_1 <- arima(ts[,"labor"], order = c(1, 0, 1))
arima_1
predict(arima_1, n.ahead = 12)
pred <- predict(arima_1, n.ahead = 12)
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0))
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0))
arima_2
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0), include.mean = TRUE)
arima_2
arima_3 <- arima(ts[,"labor"], order = c(1, 0, 0))
arima_3
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0))
arima_2
arima_4 <- arima(ts[,"labor"], order = c(1/2, 0, 0))
arima_4
arima_4 <- arima(ts[,"labor"], order = c(2, 0, 0))
arima_4
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0))
arima_2
arima_2 <- arima(ts[,"labor"], order = c(1, 0, 0))
arima_2
arima_2 <- arima(ts[,"labor"], order = c(1, 1, 0))
arima_2
arima_5 <- arima(ts[,"labor"], order = c(3, 0, 0))
arima_5
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(haven) #чтение .dta файлов
library(lmtest) #dw test, bg test
library(sandwich) #Newey-West
df <- read_dta(file = "daily-data-crsp.dta")
#ts <- ts(df[,c("crsp", "ge", "ibm", "mc")], start = c(1999, 1), end = #c(2009, 12), frequency = 12)
lin_m <- lm(ibm ~ crsp, data = df)
summary(lin_m)
dwtest(ibm ~ crsp, data = df)
bgtest(ibm ~ crsp, order = 7, data = df)
knitr::opts_chunk$set(echo = TRUE)
lin_m1 <- lm(loge ~ logsize, data = df)
library(tidyverse)
library(haven) #чтение .dta файлов
library(AER)
df <- read_dta(file = "Funds.dta")
#ts <- ts(df[,c("crsp", "ge", "ibm", "mc")], start = c(1999, 1), end = #c(2009, 12), frequency = 12)
lin_m1 <- lm(loge ~ logsize, data = df)
summary(lin_m1)
lin_m2 <- lm(logsize ~ age, data = df)
df$logsize_hat <- predict(lin_m2)
lin_m3 <- lm(df$loge ~ df$logsize_hat)
lin_m2 <- lm(logsize ~ age, data = df)
df$logsize_hat <- predict(lin_m2)
lin_m3 <- lm(loge ~ logsize_hat, data = df)
iv <- ivreg(loge ~ logsize | age, data = df)
summary(iv)
data$y_delta <- data$DELTA - data$RKFREE
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(rio) # для чтения .dta файлов
library(car) # для линейных гипотез
df <- import(file = "Seminar2.dta")
rename(df, n = A,
date = B)
rename(df, n = A,
date = B)
mutate(df, y_delta = DELTA - RKFREE,
x <- MARKET - RKFREE)
df <- na.omit(df)
View(df)
df <- mutate(df, y_delta = DELTA - RKFREE,
x <- MARKET - RKFREE)
df <- na.omit(df)
View(df)
df <- mutate(df, y_delta = DELTA - RKFREE,
x = MARKET - RKFREE)
df <- na.omit(df)
View(df)
